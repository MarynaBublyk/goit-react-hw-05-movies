{"version":3,"file":"static/js/736.15a43e35.chunk.js","mappings":"6PAEaA,EAAOC,EAAAA,EAAAA,GAASC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oHAQhBC,EAAOH,EAAAA,EAAAA,GAASI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,gCAIhBG,EAAML,EAAAA,EAAAA,IAAUM,IAAAA,GAAAJ,EAAAA,EAAAA,GAAA,wDAKhBK,EAAOP,EAAAA,EAAAA,EAAQQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,sDAKfO,EAAYT,EAAAA,EAAAA,EAAQU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,mC,SClBpBS,EAAO,WAClB,IAAAC,GAAwBC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA7BI,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GACZI,GAAYC,EAAAA,EAAAA,MAAZD,QAOR,OAJAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GAASI,KAAKL,EAC7B,GAAG,CAACC,IAECF,GAKHO,EAAAA,EAAAA,MAACxB,EAAI,CAAAyB,SAAA,CACc,IAAhBR,EAAKS,SAAgBC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,IAE5BX,EAAKY,KAAI,SAAAC,GAAA,IAAGC,EAAED,EAAFC,GAAIC,EAAYF,EAAZE,aAAcC,EAAIH,EAAJG,KAAMC,EAASJ,EAATI,UAAS,OAC5CV,EAAAA,EAAAA,MAACpB,EAAI,CAAAqB,SAAA,EACHE,EAAAA,EAAAA,KAACrB,EAAG,CAAC6B,IAhBM,mCAgBUC,OAAOJ,GAAeK,IAAI,MAC/Cb,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACEE,EAAAA,EAAAA,KAACnB,EAAI,CAAAiB,SAAEQ,KACPN,EAAAA,EAAAA,KAACjB,EAAS,CAAAe,SAAES,SAJLH,EAMJ,OAdJ,IAkBX,C","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin-top: 30px;\n  display: flex;\n  flex-wrap: wrap;\n  gap: 30px 10px;\n  justify-content: center;\n`;\n\nexport const Item = styled.li`\n  flex-basis: 150px;\n`;\n\nexport const Img = styled.img`\n  margin-bottom: 5px;\n  border-radius: 4px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 5px;\n  font-weight: 500;\n`;\n\nexport const Character = styled.p`\n  color: var(--accent);\n`;\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieCast } from 'services/getMovies';\nimport { NoCast } from 'Error/Error';\nimport { List, Item, Img, Name, Character } from './Cast.styled';\n\nexport const Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n  const imgBaseUrl = 'https://image.tmdb.org/t/p/w500/';\n\n  useEffect(() => {\n    getMovieCast(movieId).then(setCast);\n  }, [movieId]);\n\n  if (!cast) {\n    return null;\n  }\n\n  return (\n    <List>\n      {cast.length === 0 && <NoCast />}\n\n      {cast.map(({ id, profile_path, name, character }) => (\n        <Item key={id}>\n          <Img src={imgBaseUrl.concat(profile_path)} alt=\"\" />\n          <div>\n            <Name>{name}</Name>\n            <Character>{character}</Character>\n          </div>\n        </Item>\n      ))}\n    </List>\n  );\n};\n"],"names":["List","styled","_templateObject","_taggedTemplateLiteral","Item","_templateObject2","Img","_templateObject3","Name","_templateObject4","Character","_templateObject5","Cast","_useState","useState","_useState2","_slicedToArray","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","_jsxs","children","length","_jsx","NoCast","map","_ref","id","profile_path","name","character","src","concat","alt"],"sourceRoot":""}